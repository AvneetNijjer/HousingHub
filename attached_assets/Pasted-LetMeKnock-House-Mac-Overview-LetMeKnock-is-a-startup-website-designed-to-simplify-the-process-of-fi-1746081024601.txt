LetMeKnock/House@Mac
Overview
LetMeKnock is a startup website designed to simplify the process of finding student housing. It aims to have users create and manage listings  into one user-friendly platform, making it easier for students to find their perfect home. This initial version is a static serverless website, focusing on displaying static content and client-side interactivity without backend features like databases or user authentication.
Core Features
Homepage: Display a nice landing page with a picture and 2 buttons in the middle of it (browse listings, view map) with a floating rounded transparent nav bar on the top. Below that hero section have a slightly overlapping search section for filters. A grid with 6 boxes explaining why choose us and then testimonials.
Static Listings page: Display hardcoded listings with details such as titles, descriptions, prices, bedrooms, and locations. Have a filter section too
Sorting and Filtering: Implement client-side JavaScript to allow users to filter listings by price and number of bedrooms.
Static Pages: Include pages for Home/about, Listings, Guidelines with FAQ section, and with static content.
Modern UI/UX: Use a nice deep blue  and white color theme with Tailwind CSS for styling and add animations for a smooth user experience.
Note: This version is static and does not include backend features such as user authentication, messaging, scheduling, or databases. All content is hardcoded or generated client-side.
Technologies
Frontend: React and Next JS, CSS (Tailwind CSS), JavaScript
Optional: Additional JavaScript libraries and any other technology libraries for animations or enhanced interactivity
Development Process
Planning: Define the website's structure, pages, and core features.
Design: Create wireframes and design a modern UI/UX with animations and a maroon red/white theme.
Implementation: Write React/NextJS, CSS, and JavaScript to build the static frontend, and filtering functionality.
Testing: Ensure all features work as expected and the site is responsive across devices.
Deployment: Host the static site on Vercel.
Future Plans
Future development will focus on adding backend features to make the platform fully functional, including:
User authentication (OAuth 2.0)
Messaging and scheduling systems
Database integration for dynamic listings
AI chatbot for user support
Online lease signing with encryption

